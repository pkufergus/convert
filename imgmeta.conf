#-- config for imgmeta

[GLOBAL]
# ipauth文件
ipauth_file : ./conf/authip
# 重新加载product_auth和ip认证文件的指示，touch一个空文件即可，下次后台线程检查到以后会重新加载ipauth文件
ipreload_flag : ./conf/ipreload
# UbMonitor配置文件，如果不使用，请忽略这个配置
ubmonitor_conf : ./conf/ubmonitor.conf

# 重启指示，touch一个空文件即可，下次后台线程检查到以后会自杀
suicide_flag : ./conf/suicide

# 后台线程的间隔，ms
daemon_interval : 10000
# profiler间隔，ms
profiler_interval : 1000
# 命令速率统计间隔，ms
cmdstatis_interval : 1000
# limit输出文件
limit_path: ../limits/imgmeta

#-- comlog配置
[log]
level : 4
procname : imgmeta
[.@device]
type : ULLOG
path : log
file : imgmeta.log
syslevel : 8
split_type : SIZECUT
log_size : 8192

#-- 后台bat_delete线程的配置
[bat_delete]
# 操作失败后的重试间隔，目前适用于BatDeleteThread
failure_sleep_ms : 100
# pack数据保存的目录
data_dir : ./data/bat_delete
# 执行sql时一次处理的图片数上限
sql_batch_num : 10
# 延迟删除cache时一次处理的key数目上限
cache_batch_num : 500

# 读取文件的缓冲区大小
data_buf_size : 10485760
# mempool的大小
mempool_size : 10485760

# 删除命令的记录
delete_audit_path : ./data/delete_audit

#-- 后台bat_delete线程的配置
[bat_update_cache]
# 操作失败后的重试间隔，目前适用于BatDeleteThread
failure_sleep_ms : 100
# pack数据保存的目录
data_dir : ./data/bat_update_cache
# 读取文件的缓冲区大小
data_buf_size : 10485760
# mempool的大小
mempool_size : 10485760

#-- server端配置，更新线程
[update]
enable_ipauth : 1
# 用于mcpack的内存池。类型，(0:syspool, 1:xmempool)
mempool_type : 1
# mempool的大小，当不用syspool时有效
mempool_size : 10485760
[.svr]
# 服务名称
name : update
# 端口
port : 5512
# 连接超时，默认为500ms
connect_timeout_ms : 500
# 读超时，默认为500ms
read_timeout_ms : 500
# 写超时，默认为500ms
write_timeout_ms : 500
# 线程数，默认为1，这里必须用1
thread_num : 8
# 连接类型，(0:短连接, 1:长连接)，默认为0
connect_type : 1
# pool类型，(0:XPOOL, 1:CPOOL, 2:EPOOL, 3:APOOL)，默认为2
server_type : 2
# POOL的queue_size，默认为200
queue_size : 200
# POOL的sock_size，默认为500
sock_size : 500
# 读缓冲区大小，默认为1M
read_buf_size : 10485760
# 写缓冲区大小，默认为1M
write_buf_size : 1048576

#-- server端配置，更新线程
[cache_update]
enable_ipauth : 1
# 用于mcpack的内存池。类型，(0:syspool, 1:xmempool)
mempool_type : 1
# mempool的大小，当不用syspool时有效
mempool_size : 10485760
[.svr]
# 服务名称
name : cache_update
# 端口
port : 5511
# 连接超时，默认为500ms
connect_timeout_ms : 500
# 读超时，默认为500ms
read_timeout_ms : 500
# 写超时，默认为500ms
write_timeout_ms : 500
# 线程数，默认为1，这里必须用1
thread_num : 8
# 连接类型，(0:短连接, 1:长连接)，默认为0
connect_type : 1
# pool类型，(0:XPOOL, 1:CPOOL, 2:EPOOL, 3:APOOL)，默认为2
server_type : 2
# POOL的queue_size，默认为200
queue_size : 200
# POOL的sock_size，默认为500
sock_size : 500
# 读缓冲区大小，默认为1M
read_buf_size : 10485760
# 写缓冲区大小，默认为1M
write_buf_size : 1048576


#-- server端配置，查询线程
[query]
enable_ipauth : 1
# 用于mcpack的内存池。类型，(0:syspool, 1:xmempool)
mempool_type : 1
# mempool的大小，当不用syspool时有效
mempool_size : 1048576
[.svr]
# 服务名称
name : query
# 端口
port : 5513
# 连接超时，默认为500ms
connect_timeout_ms : 500
# 读超时，默认为500ms
read_timeout_ms : 500
# 写超时，默认为500ms
write_timeout_ms : 500
# 线程数，默认为1
thread_num : 10
# 连接类型，(0:短连接, 1:长连接)，默认为0
connect_type : 0
# pool类型，(0:XPOOL, 1:CPOOL, 2:EPOOL, 3:APOOL)，默认为2
server_type : 2
# POOL的queue_size，默认为200
queue_size : 200
# POOL的sock_size，默认为500
sock_size : 500
# 读缓冲区大小，默认为1M
read_buf_size : 1048576
# 写缓冲区大小，默认为1M
write_buf_size : 1048576

#-- server端配置，查询线程(长连接)
[longquery]
enable_ipauth : 1
# 用于mcpack的内存池。类型，(0:syspool, 1:xmempool)
mempool_type : 1
# mempool的大小，当不用syspool时有效
mempool_size : 1048576
[.svr]
# 服务名称
name : longquery
# 端口
port : 5514
# 连接超时，默认为500ms
connect_timeout_ms : 500
# 读超时，默认为500ms
read_timeout_ms : 500
# 写超时，默认为500ms
write_timeout_ms : 500
# 线程数，默认为1
thread_num : 20
# 连接类型，(0:短连接, 1:长连接)，默认为0
connect_type : 1
# pool类型，(0:XPOOL, 1:CPOOL, 2:EPOOL, 3:APOOL)，默认为2
server_type : 2
# POOL的queue_size，默认为200
queue_size : 200
# POOL的sock_size，默认为500
sock_size : 500
# 读缓冲区大小，默认为1M
read_buf_size : 1048576
# 写缓冲区大小，默认为1M
write_buf_size : 1048576

[DBConfig]
use_ddbs : 1
# db的主库集群数目
cluster_num : 1
# 健康检查时间间隔，s. 0表示不启用检查，强烈不推荐
health_check: 1
# 慢查询记录的时间阈值，ms. 设置为0会记录所有查询
slow_query_time : 500
# 是否开启transaction
transaction_enable: 0

# 数据库分库配置说明
# - tag为cluster0表示是第一套集群，以此类推
# - tag含master的是主库，用于写操作；tag含slave的是从库，用于读操作
# - 每个tag可能会有多个，比如dba给集群0的主库(cluster0_master)提供了两个dbproxy
#   保证connection数和线程数匹配，一般主库的连接数少，从库的连接数多
# - 可能cluster0_master和cluster0_slave指向的是同一个dbproxy，
#   而必须用不同的tag，是因为我们用长连接，dbproxy内部会通过sql的类型来区分主从

[.@database]
# 集群0的主库-0
tag: cluster0_master
ip: 10.50.15.112
port: 4014
# 读超时，s
readto: 1
# 写超时，s
writeto: 1
# 连接超时，s
connectto: 1
minconns: 10
maxconns: 15
username: ddbs_img
password: 904b4L0C0cF6fc8A
dbname: ns_space_imgmeta
charset: gbk

[.@database]
# 集群0的主库-1
tag: cluster0_master
ip: 10.26.3.140
port: 4014
# 读超时，s
readto: 1
# 写超时，s
writeto: 1
# 连接超时，s
connectto: 1
minconns: 10
maxconns: 15
username: ddbs_img
password: 904b4L0C0cF6fc8A
dbname: ns_space_imgmeta
charset: gbk

[.@database]
# 集群0的从库-0
tag: cluster0_slave
ip: 10.50.15.112
port: 4014
# 读超时，s
readto: 1
# 写超时，s
writeto: 1
# 连接超时，s
connectto: 1
minconns: 15
maxconns: 20
username: ddbs_img
password: 904b4L0C0cF6fc8A
dbname: ns_space_imgmeta
charset: gbk

[.@database]
# 集群0的从库-1
tag: cluster0_slave
ip: 10.26.3.140
port: 4014
# 读超时，s
readto: 1
# 写超时，s
writeto: 1
# 连接超时，s
connectto: 1
minconns: 15
maxconns: 20
username: ddbs_img
password: 904b4L0C0cF6fc8A
dbname: ns_space_imgmeta
charset: gbk

#--cache2.0
[NeCacheConfig]
#指定Cache2.0的gourp的pid
necache_info_pid : "ksarch_cezanne"
necache_sign_pid : "ksarch_cezanne_dedup"
#指定Cache2.0的conf文件的dir
necache_conf_dir : "necache.conf"

#-- memcache
[MemCacheConfig]

# 在更新命令中填充sign=>pic_id的cache，默认为1
cache_pic_sign_update_interval : 7200
# 在查询命令中填充sign=>pic_id的cache，默认为0
cache_pic_sign_when_query : 1
cache_pic_info_update_interval : 7200

# 是否启用通过transmmc做延迟删除. 0: 不启用; 1: 启用
delay_delete_enable : 0

# 计数类统计的周期，默认为1h
stat_interval_s : 3600

[.pic_info_cache]
# cache冗余的组数，每组cache都保存全量数据
duplicate_num : 2
# 第一组
@mcserver : 10.26.101.20:11201,10.26.100.47:11201,10.26.100.48:11201,10.92.148.15:11201,10.92.148.46:11201,10.92.148.43:11201,10.26.101.20:11202,10.26.100.47:11202,10.26.100.48:11202,10.92.148.15:11202,10.92.148.46:11202,10.92.148.43:11202,10.36.49.12:11201,10.36.49.32:11201,10.92.119.14:11201,10.92.148.41:11201,10.92.148.14:11201,10.92.148.16:11201,10.36.49.12:11202,10.36.49.32:11202,10.92.119.14:11202,10.92.148.41:11202,10.92.148.14:11202,10.92.148.16:11202
# 第二组，和第一组的机器错位
@mcserver : 10.36.49.32:11211,10.92.119.14:11211,10.92.148.41:11211,10.92.148.14:11211,10.92.148.16:11211,10.36.49.12:11211,10.36.49.32:11212,10.92.119.14:11212,10.92.148.41:11212,10.92.148.14:11212,10.92.148.16:11212,10.36.49.12:11212,10.26.100.47:11211,10.26.100.48:11211,10.92.148.15:11211,10.92.148.46:11211,10.92.148.43:11211,10.26.101.20:11211,10.26.100.47:11212,10.26.100.48:11212,10.92.148.15:11212,10.92.148.46:11212,10.92.148.43:11212,10.26.101.20:11212

# 连接超时，ms
connectto : 10
# 读写超时，ms
pollto : 500
# 连接重试次数
failurelimit : 2
# 重试间隔时间，s
retryto : 60

[.pic_sign_cache]
# cache冗余的组数，每组cache都保存全量数据
duplicate_num : 2
# 第一组
@mcserver : 10.26.101.20:11201,10.26.100.47:11201,10.26.100.48:11201,10.92.148.15:11201,10.92.148.46:11201,10.92.148.43:11201,10.26.101.20:11202,10.26.100.47:11202,10.26.100.48:11202,10.92.148.15:11202,10.92.148.46:11202,10.92.148.43:11202,10.36.49.12:11201,10.36.49.32:11201,10.92.119.14:11201,10.92.148.41:11201,10.92.148.14:11201,10.92.148.16:11201,10.36.49.12:11202,10.36.49.32:11202,10.92.119.14:11202,10.92.148.41:11202,10.92.148.14:11202,10.92.148.16:11202
# 第二组，和第一组的机器错位
@mcserver : 10.36.49.32:11211,10.92.119.14:11211,10.92.148.41:11211,10.92.148.14:11211,10.92.148.16:11211,10.36.49.12:11211,10.36.49.32:11212,10.92.119.14:11212,10.92.148.41:11212,10.92.148.14:11212,10.92.148.16:11212,10.36.49.12:11212,10.26.100.47:11211,10.26.100.48:11211,10.92.148.15:11211,10.92.148.46:11211,10.92.148.43:11211,10.26.101.20:11211,10.26.100.47:11212,10.26.100.48:11212,10.92.148.15:11212,10.92.148.46:11212,10.92.148.43:11212,10.26.101.20:11212

# 连接超时，ms
connectto : 10
# 读写超时，ms
pollto : 500
# 连接重试次数
failurelimit : 2
# 重试间隔时间，s
retryto : 60

#-- memcache_delay_delete
[TransMMCTalker]
# service的名称，要和UbClientConfig中的对应
service_name : memcache_delay_delete
# provider名称
provider : imgmeta

# 发送包的mcpack版本
mcpack_version : 1
# 失败时的最大尝试次数
max_retry : 3
# 失败时重试的间隔
failure_sleep_ms : 10

# 发送请求缓冲区大小
req_buf_size : 102400
# 接收请求缓冲区大小
resp_buf_size : 102400
# 内存池大小
mempool_size : 102400

# 发送的命令号
cmd_no : 15201

#-- ubclient的配置
[UbClientConfig] 
#配置类型 
#0:优先使用资源定位 
#1:使用本地配置 
#2:同时使用资源定位和本地配置 
#不设置，使用本地配置 
ConfType : 1 

#事件模型配置 
[.Reactor] 
#内部工作线程，建议与cpu 核数相当 
ThreadNum : 2
#epool wait的timeout时间(ms)，过大会导致网络IO响应延迟，建议使用1
CheckTime : 1

#本地配置，仅要求使用资源定位时可不存在 
[.UbClient] 

[..@Service] 
Name : memcache_delay_delete

DefaultPort : 20613
DefaultConnectTimeOut : 100 
DefaultReadTimeOut : 500 
DefaultWriteTimeOut : 500 
DefaultMaxConnect : 20
DefaultLinger : 0 
DefaultAsyncWaitingNum : 0

DefaultConnectType : SHORT 
DefaultRetry : 3
DefaultFetchConnMaxTime : 0
ConnectAll : 0

[...@Server] 
IP : 10.36.49.12

[...@Server] 
IP : 10.26.101.20
